server:
  port: 8080
spring:
  application:
    name: "accounts"
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true
  config:
    import: "optional:configserver:http://localhost:8071/"
#    rabbitMq properties
#  rabbitmq:
#    host: "localhost"
#    username: "guest"
#    port: 5672
#    password: "guest"
  cloud:
    function:
      definition: updateCommunication
    stream:
      bindings:
        updateCommunication-in-0:
          destination: communication-sent
          group: ${spring.application.name}
        sendCommunication-out-0:
          destination: send-communication
          group: ${spring.application.name}
      kafka:
        binder:
          brokers:
            -localhost:9092
management:
  info:
    env:
      enabled: true
  endpoint:
    shutdown:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8070/eureka

info:
  app:
    name: "accounts"
    description: "Account microservice"
    version: "1.0"
